name: Build

on:
  push:
    branches:
      - master
jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mariadb:
        image: mariadb:latest
        ports:
          - 3306
        env:
          MYSQL_USER: com
          MYSQL_PASSWORD: com01
          MYSQL_DATABASE: com
          MYSQL_ROOT_PASSWORD: password
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: init mariadb
        run: |
          sudo apt install mariadb-client
          mariadb --host=localhost --protocol=tcp --port=${{ job.services.mariadb.ports[3306] }} --user=com --password=com01 com < src/main/resources/com/smhrd/projectweb/entity/sql/table.sql
          cp src/main/resources/persistence-mariadb-example.properties src/main/resources/persistence-mariadb.properties 
          sed -i 's/3306/${{ job.services.mariadb.ports[3306] }}/g' src/main/resources/persistence-mariadb.properties 
          cat src/main/resources/persistence-mariadb.properties 

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'microsoft'
          cache: 'gradle'

      - name: Set Gradle Wrapper permission
        run: chmod +x ./gradlew

      - name: Test
        run: ./gradlew test

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'microsoft'
          cache: 'gradle'

      - name: Set Gradle Wrapper permission
        run: chmod +x ./gradlew

      - name: Build
        run: ./gradlew build

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: build/libs

  docker:
    runs-on: ubuntu-latest
    if: ${{ github.repository_owner == 'Last-Summer-Project' && github.ref == 'refs/heads/master' }}
    needs: test
    permissions:
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'microsoft'
          cache: 'gradle'

      - name: Set Gradle Wrapper permission
        run: chmod +x ./gradlew

      - name: Build docker image (for master)
        run: ./gradlew bootBuildImage
        env:
          CONTAINER_IMAGE_NAME: ${{ github.repository }}
          CONTAINER_REGISTRY_URL: "ghcr.io"
          CONTAINER_REGISTRY_USERNAME: ${{ github.repository_owner }}
          CONTAINER_REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
          CONTAINER_BUILD_SHA: ${{ github.sha }}

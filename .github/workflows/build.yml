name: Build

on:
  push:
    branches:
      - master
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    services:
      mariadb:
        image: mariadb:latest
        ports:
          - 3306
        env:
          MYSQL_USER: com
          MYSQL_PASSWORD: com01
          MYSQL_DATABASE: com
          MYSQL_ROOT_PASSWORD: password
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: init mariadb and mocks
        run: |
          sudo apt install mariadb-client
          mariadb --host=localhost --protocol=tcp --port=${{ job.services.mariadb.ports[3306] }} --user=com --password=com01 com < src/test/resources/table-template.sql
          sed -i 's/172.30.1.3/localhost/g' src/test/resources/application.properties
          sed -i 's/3307/${{ job.services.mariadb.ports[3306] }}/g' src/test/resources/application.properties
          cp src/test/resources/application.properties src/main/resources/application.properties
          cat src/main/resources/application.properties
          mkdir -p /tmp/config
          mkdir -p /tmp/data
          docker run -d -p 9000:9000 --name minio \
                     -e "MINIO_ACCESS_KEY=access-key" \
                     -e "MINIO_SECRET_KEY=secret-key" \
                     -v /tmp/data:/data \
                     -v /tmp/config:/root/.minio \
                     minio/minio server /data
          wget https://dl.minio.io/client/mc/release/linux-amd64/mc
          chmod +x mc
          ./mc config host add my http://localhost:9000 access-key secret-key
          ./mc mb my/test-bucket
          ./mc mb my/dev-bucket

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'microsoft'
          cache: 'gradle'

      - name: Set Gradle Wrapper permission
        run: chmod +x ./gradlew

      - name: Test and build
        run: |
          ./gradlew test
          ./gradlew build
          ./gradlew asciidoctor

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: build/libs

      - name: Upload docs artifact
        uses: actions/upload-artifact@v3
        with:
          name: docs-artifact
          path: build/docs

  docker:
    name: Docker image
    runs-on: ubuntu-latest
    if: ${{ github.repository_owner == 'Last-Summer-Project' && github.ref == 'refs/heads/master' }}
    needs: build
    permissions:
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'microsoft'
          cache: 'gradle'

      - name: Set Gradle Wrapper permission
        run: chmod +x ./gradlew

      - name: Build docker image (for master)
        run: ./gradlew bootBuildImage
        env:
          CONTAINER_IMAGE_NAME: ${{ github.repository }}
          CONTAINER_REGISTRY_URL: "ghcr.io"
          CONTAINER_REGISTRY_USERNAME: ${{ github.repository_owner }}
          CONTAINER_REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
          CONTAINER_BUILD_SHA: ${{ github.sha }}

  docs:
    name: Deploy docs
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.repository_owner == 'Last-Summer-Project' && github.ref == 'refs/heads/master' }}
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: docs-artifact
          path: docs

      - name: Deploy docs
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          git-config-name: "github-actions[bot]"
          git-config-email: "41898282+github-actions[bot]@users.noreply.github.com"
          single-commit: false
          folder: docs
